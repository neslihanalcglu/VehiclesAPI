// <auto-generated />
using CaseStudyCore.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CaseStudyCore.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210815142458_asdf")]
    partial class asdf
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CaseStudyCore.Entities.Color", b =>
                {
                    b.Property<int>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorID");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("CaseStudyCore.Entities.Vehicle", b =>
                {
                    b.Property<int>("VehicleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColorID")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleID");

                    b.HasIndex("ColorID");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehicle");
                });

            modelBuilder.Entity("CaseStudyCore.Entities.Boat", b =>
                {
                    b.HasBaseType("CaseStudyCore.Entities.Vehicle");

                    b.Property<string>("BoutName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Boat");
                });

            modelBuilder.Entity("CaseStudyCore.Entities.Bus", b =>
                {
                    b.HasBaseType("CaseStudyCore.Entities.Vehicle");

                    b.Property<string>("BusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Bus");
                });

            modelBuilder.Entity("CaseStudyCore.Entities.Car", b =>
                {
                    b.HasBaseType("CaseStudyCore.Entities.Vehicle");

                    b.Property<string>("CarName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Headlight")
                        .HasColumnType("bit");

                    b.Property<int>("Wheel")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Car");
                });

            modelBuilder.Entity("CaseStudyCore.Entities.Vehicle", b =>
                {
                    b.HasOne("CaseStudyCore.Entities.Color", "Color")
                        .WithMany("Vehicles")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("CaseStudyCore.Entities.Color", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
